#![feature(test)]
extern crate test;

extern crate ndarray;

extern crate reform;

use test::Bencher;

use ndarray::{arr1, arr2, Array1, Array2};

use reform::poly::raw::zp;
use reform::poly::raw::zp::ufield;

/*
n = 8;
p = NextPrime[2^30, -1];
a = Table[RandomInteger[{0, p - 1}], {n}, {n}];
b = Table[RandomInteger[{0, p - 1}], {n}];
x = LinearSolve[a, b, Modulus -> p];
*/

#[bench]
fn zp_solve8x8(b: &mut Bencher) {
    let a: Array2<ufield> = arr2(&[
        [
            581962757, 982179354, 897967976, 357232738, 498748862, 908237485, 392276714, 567274827,
        ],
        [
            800307988, 731183116, 527618090, 758539184, 935012179, 980221544, 67282650, 714495896,
        ],
        [
            594065329, 1006350964, 34662131, 407424025, 720725329, 999245740, 972565402, 264934098,
        ],
        [
            387399233, 932290789, 881658979, 1007562945, 747007532, 864164245, 872577773,
            173273274,
        ],
        [
            46112073, 570804678, 660103286, 581868710, 495985726, 384510380, 181913409, 1319492,
        ],
        [
            881709382, 719970231, 103435931, 459658048, 556902309, 581721222, 787078486, 429455907,
        ],
        [
            729363464, 697159446, 749945145, 513488397, 413384490, 9508676, 155942484, 41084927,
        ],
        [
            541953164, 205847091, 879617734, 527327832, 510489751, 229793941, 832570671, 277986528,
        ],
    ]);
    let bb: Array1<ufield> = arr1(&[
        425624807, 856141991, 404211143, 444057653, 229902237, 386423009, 1000875508, 1000086555,
    ]);
    let p: ufield = 1073741789;
    let x: Array1<ufield> = arr1(&[
        303589260, 265233435, 9242804, 82274293, 524235948, 219089428, 895674455, 107421286,
    ]);
    b.iter(|| {
        let r = zp::solve(&a, &bb, p).unwrap();
        assert_eq!(r, x);
        r
    });
}

#[bench]
fn zp_solve16x16(b: &mut Bencher) {
    let a: Array2<ufield> = arr2(&[
        [
            541789347, 952407337, 598950773, 833151099, 905342757, 540664739, 468574564, 616269547,
            274837570, 826096610, 59889728, 687346910, 85817616, 576605199, 286021570, 41076034,
        ],
        [
            560587833, 243809187, 747887801, 1044063775, 1043228509, 67644421, 1007154703,
            507313682, 963723232, 398865936, 740630865, 2717104, 952505861, 1022442471, 189722701,
            327032246,
        ],
        [
            396357759, 550300850, 496757321, 432172994, 170868086, 217179874, 359490917, 367735827,
            617740561, 499252481, 994754632, 680175291, 541737012, 195420602, 395047854, 11359323,
        ],
        [
            146582048, 922079679, 241259278, 944975292, 333956066, 1007883051, 344631626,
            1013725936, 854641000, 947533833, 616603580, 48612541, 412652840, 440127063, 224493734,
            431616788,
        ],
        [
            1054301269, 950812720, 1018369627, 742156908, 711445515, 941480410, 870494277,
            43347289, 594227017, 722861628, 426578231, 90415810, 449832789, 949691979, 380242593,
            498871359,
        ],
        [
            30037647, 460909113, 975445293, 405722204, 854026168, 8886438, 145547776, 526842112,
            553317892, 14225450, 264028230, 26201045, 74582031, 10005951, 420290997, 1059870202,
        ],
        [
            382445788, 469498755, 918946020, 812398545, 377456248, 70721605, 864432506, 762376405,
            94245200, 1028045746, 889991286, 834130262, 469774539, 638462850, 625593050, 551527953,
        ],
        [
            559168801, 1031128373, 653392454, 1062115069, 464795569, 488019270, 31972695,
            191308958, 603735248, 731196169, 902881642, 420751256, 627253401, 1029548919,
            1042773329, 621846585,
        ],
        [
            59184576, 650541013, 313064759, 360087163, 609163036, 1035148702, 951084804, 882404707,
            1013497307, 51095829, 826848205, 72577486, 389181890, 638204245, 601878075, 837883725,
        ],
        [
            472791375, 19913027, 109373853, 85468865, 949253992, 1047163318, 980344793, 731407802,
            18856263, 466859367, 289475471, 972595694, 1057583564, 781543452, 574348269, 964532849,
        ],
        [
            474555827, 309630410, 191626044, 613315498, 1011778802, 1072739944, 672720184,
            217644314, 501907777, 705000452, 353104401, 573697213, 451594526, 193775199, 234616853,
            139537104,
        ],
        [
            346916595, 380489875, 335908982, 845162151, 555037639, 511094171, 343574575, 711595635,
            752335996, 52699037, 390069788, 765877200, 594330783, 583803036, 980521636, 419724206,
        ],
        [
            977897624, 409731801, 761531990, 337753788, 555271773, 126567632, 562514525, 941356855,
            533049671, 385361239, 849390052, 65779848, 836196510, 1024587914, 292325939, 33875595,
        ],
        [
            691041521, 100973186, 464943768, 920889947, 1041081535, 1064576685, 184018949,
            1044754502, 689728332, 719992166, 1019450628, 128685332, 805767633, 218223408,
            640785999, 399232861,
        ],
        [
            563837620, 912952199, 475733562, 191236191, 910057978, 472093262, 239302008, 477729110,
            119994649, 931013163, 398277657, 411901799, 110119113, 4783480, 817871159, 423404945,
        ],
        [
            1047394154, 67190473, 113573359, 655221054, 132179364, 85318524, 442706414, 441594241,
            51809123, 296388362, 819636270, 650905305, 791616760, 224893440, 329142491, 798151467,
        ],
    ]);
    let bb: Array1<ufield> = arr1(&[
        326511598, 80166637, 415968530, 501614771, 701896421, 748634219, 819355078, 869776946,
        861821996, 455439302, 599620959, 706934539, 277493435, 71408846, 650116041, 126635775,
    ]);
    let p: ufield = 1073741789;
    let x: Array1<ufield> = arr1(&[
        274439590, 632793464, 1031201202, 715041664, 753670802, 41995709, 40020270, 794766464,
        59590494, 298950464, 363067051, 398069851, 222787042, 883284060, 299907438, 246318846,
    ]);
    b.iter(|| {
        let r = zp::solve(&a, &bb, p).unwrap();
        assert_eq!(r, x);
        r
    });
}
