			let mut x_dol = x.clone();
			x_dol.replace_vars(var_info); // replace dollar variables
	      	let mut res = match (input, &mut x_dol) {
	      		(&mut Element::Term(_,ref mut xx), &mut Element::Term(_, ref mut yy)) => {
					  xx.append(yy); 
					  Element::Term(true, mem::replace(xx, vec![])) 
				},
				(&mut Element::Term(_,ref mut xx), _) => { xx.push(x_dol); Element::Term(true, mem::replace(xx, vec![])) },
				// FIXME: clone
				(ref mut a, &mut Element::Term(_,ref mut xx)) => { let mut r = xx.clone(); r.push(mem::replace(a, DUMMY_ELEM!())); Element::Term(true, r) },
	      		(ref mut a, ref mut aa) => Element::Term(true, vec![mem::replace(a, DUMMY_ELEM!()), aa.clone()])
	      	};
			res.normalize_inplace();
	      	StatementIter::Simple(res, true)